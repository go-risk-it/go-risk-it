// Code generated by mockery v2.46.3. DO NOT EDIT.

package fetcher

import (
	ctx "github.com/go-risk-it/go-risk-it/internal/ctx"

	json "encoding/json"

	mock "github.com/stretchr/testify/mock"
)

// CardFetcher is an autogenerated mock type for the CardFetcher type
type CardFetcher struct {
	mock.Mock
}

type CardFetcher_Expecter struct {
	mock *mock.Mock
}

func (_m *CardFetcher) EXPECT() *CardFetcher_Expecter {
	return &CardFetcher_Expecter{mock: &_m.Mock}
}

// FetchState provides a mock function with given fields: _a0, stateChannel
func (_m *CardFetcher) FetchState(_a0 ctx.GameContext, stateChannel chan json.RawMessage) {
	_m.Called(_a0, stateChannel)
}

// CardFetcher_FetchState_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'FetchState'
type CardFetcher_FetchState_Call struct {
	*mock.Call
}

// FetchState is a helper method to define mock.On call
//   - _a0 ctx.GameContext
//   - stateChannel chan json.RawMessage
func (_e *CardFetcher_Expecter) FetchState(_a0 interface{}, stateChannel interface{}) *CardFetcher_FetchState_Call {
	return &CardFetcher_FetchState_Call{Call: _e.mock.On("FetchState", _a0, stateChannel)}
}

func (_c *CardFetcher_FetchState_Call) Run(run func(_a0 ctx.GameContext, stateChannel chan json.RawMessage)) *CardFetcher_FetchState_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(ctx.GameContext), args[1].(chan json.RawMessage))
	})
	return _c
}

func (_c *CardFetcher_FetchState_Call) Return() *CardFetcher_FetchState_Call {
	_c.Call.Return()
	return _c
}

func (_c *CardFetcher_FetchState_Call) RunAndReturn(run func(ctx.GameContext, chan json.RawMessage)) *CardFetcher_FetchState_Call {
	_c.Call.Return(run)
	return _c
}

// NewCardFetcher creates a new instance of CardFetcher. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewCardFetcher(t interface {
	mock.TestingT
	Cleanup(func())
}) *CardFetcher {
	mock := &CardFetcher{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
