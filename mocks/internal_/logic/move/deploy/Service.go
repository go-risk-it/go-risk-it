// Code generated by mockery v2.42.1. DO NOT EDIT.

package deploy

import (
	context "context"

	db "github.com/go-risk-it/go-risk-it/internal/data/db"

	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

type Service_Expecter struct {
	mock *mock.Mock
}

func (_m *Service) EXPECT() *Service_Expecter {
	return &Service_Expecter{mock: &_m.Mock}
}

// PerformDeployMoveQ provides a mock function with given fields: ctx, querier, gameID, player, region, troops
func (_m *Service) PerformDeployMoveQ(ctx context.Context, querier db.Querier, gameID int64, player string, region string, troops int) error {
	ret := _m.Called(ctx, querier, gameID, player, region, troops)

	if len(ret) == 0 {
		panic("no return value specified for PerformDeployMoveQ")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, db.Querier, int64, string, string, int) error); ok {
		r0 = rf(ctx, querier, gameID, player, region, troops)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Service_PerformDeployMoveQ_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PerformDeployMoveQ'
type Service_PerformDeployMoveQ_Call struct {
	*mock.Call
}

// PerformDeployMoveQ is a helper method to define mock.On call
//   - ctx context.Context
//   - querier db.Querier
//   - gameID int64
//   - player string
//   - region string
//   - troops int
func (_e *Service_Expecter) PerformDeployMoveQ(ctx interface{}, querier interface{}, gameID interface{}, player interface{}, region interface{}, troops interface{}) *Service_PerformDeployMoveQ_Call {
	return &Service_PerformDeployMoveQ_Call{Call: _e.mock.On("PerformDeployMoveQ", ctx, querier, gameID, player, region, troops)}
}

func (_c *Service_PerformDeployMoveQ_Call) Run(run func(ctx context.Context, querier db.Querier, gameID int64, player string, region string, troops int)) *Service_PerformDeployMoveQ_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(db.Querier), args[2].(int64), args[3].(string), args[4].(string), args[5].(int))
	})
	return _c
}

func (_c *Service_PerformDeployMoveQ_Call) Return(_a0 error) *Service_PerformDeployMoveQ_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Service_PerformDeployMoveQ_Call) RunAndReturn(run func(context.Context, db.Querier, int64, string, string, int) error) *Service_PerformDeployMoveQ_Call {
	_c.Call.Return(run)
	return _c
}

// PerformDeployMoveWithTx provides a mock function with given fields: ctx, gameID, player, region, troops
func (_m *Service) PerformDeployMoveWithTx(ctx context.Context, gameID int64, player string, region string, troops int) error {
	ret := _m.Called(ctx, gameID, player, region, troops)

	if len(ret) == 0 {
		panic("no return value specified for PerformDeployMoveWithTx")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, int64, string, string, int) error); ok {
		r0 = rf(ctx, gameID, player, region, troops)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// Service_PerformDeployMoveWithTx_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'PerformDeployMoveWithTx'
type Service_PerformDeployMoveWithTx_Call struct {
	*mock.Call
}

// PerformDeployMoveWithTx is a helper method to define mock.On call
//   - ctx context.Context
//   - gameID int64
//   - player string
//   - region string
//   - troops int
func (_e *Service_Expecter) PerformDeployMoveWithTx(ctx interface{}, gameID interface{}, player interface{}, region interface{}, troops interface{}) *Service_PerformDeployMoveWithTx_Call {
	return &Service_PerformDeployMoveWithTx_Call{Call: _e.mock.On("PerformDeployMoveWithTx", ctx, gameID, player, region, troops)}
}

func (_c *Service_PerformDeployMoveWithTx_Call) Run(run func(ctx context.Context, gameID int64, player string, region string, troops int)) *Service_PerformDeployMoveWithTx_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(int64), args[2].(string), args[3].(string), args[4].(int))
	})
	return _c
}

func (_c *Service_PerformDeployMoveWithTx_Call) Return(_a0 error) *Service_PerformDeployMoveWithTx_Call {
	_c.Call.Return(_a0)
	return _c
}

func (_c *Service_PerformDeployMoveWithTx_Call) RunAndReturn(run func(context.Context, int64, string, string, int) error) *Service_PerformDeployMoveWithTx_Call {
	_c.Call.Return(run)
	return _c
}

// NewService creates a new instance of Service. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewService(t interface {
	mock.TestingT
	Cleanup(func())
}) *Service {
	mock := &Service{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
