services:
  db:
    extends:
      file: supabase/docker-compose.yml
      service: db
  auth:
    extends:
      file: supabase/docker-compose.yml
      service: auth
  kong:
    extends:
      file: supabase/docker-compose.yml
      service: kong

  sqlc:
    image: sqlc/sqlc:latest
    env_file:
      - component-test/.env
    volumes:
      - ./:/src
    working_dir: /src
    command: generate

  mockery:
    image: vektra/mockery:v2.50@sha256:2bb8c34143401c8565a663fbb1ca96d28ad6a0566e4c43e438ea394f4114bb93
    volumes:
      - ./:/src
    working_dir: /src
    depends_on:
      - sqlc

  risk-it:
    build:
      context: .
      dockerfile: docker/component-test/Dockerfile
    ports:
      - "8080:8080"
    environment:
      - OTEL_RESOURCE_ATTRIBUTES=service.name=risk-it,service.version=0.1.0
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
    depends_on:
      db:
        condition: service_healthy

  jaeger:
    image: jaegertracing/jaeger:2.2.0
    ports:
      - "16686:16686"
      - "4317:4317"
      - "4318:4318"
      - "5778:5778"
      - "9411:9411"


volumes:
  postgres_data:
  socket:
  db-config:
